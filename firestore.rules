
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user owns the document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users Collection: Users can read anyone's profile, but can only write to their own.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);
    }
    
    // Posts Collection: Any signed-in user can read all posts. Users can only create, update, or delete their own posts.
    match /posts/{postId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isSignedIn() && isOwner(request.resource.data.authorId);
      
      // Comments Subcollection: Any signed-in user can read comments and add new ones. Only the comment author can delete their own comment.
      match /comments/{commentId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow delete: if isSignedIn() && isOwner(resource.data.authorId);
      }
    }
    
    // Events Collection: Any signed-in user can read all events. Users can only create events. Deletion is restricted to the event creator.
    match /events/{eventId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow delete: if isSignedIn() && isOwner(resource.data.userId);
    }
    
    // Farm Plots Collection: Users can only manage their own farm plots.
    match /farmPlots/{plotId} {
        allow read, create, update, delete: if isSignedIn() && isOwner(request.resource.data.userId);
    }
    
    // Harvests Collection: Users can manage their own harvests.
    match /harvests/{harvestId} {
        allow read, create, update, delete: if isSignedIn() && isOwner(request.resource.data.userId);

        // Harvest Plots Subcollection: Users can only manage plots within their own harvests.
        match /harvestPlots/{harvestPlotId} {
            allow read, create, update, delete: if isSignedIn() && isOwner(request.resource.data.userId);

            // Operations Subcollection: Users can manage operations within their own harvest plots.
            match /operations/{operationId} {
                allow read, create, update, delete: if isSignedIn() && isOwner(request.resource.data.userId);
            }
        }
    }

    // Items Collection: Users can manage their own inventory items.
    match /items/{itemId} {
      allow read, create, update, delete: if isSignedIn() && isOwner(request.resource.data.userId);
    }
    
    // Inventory Logs Collection: Users can only manage their own inventory logs.
    match /inventoryLogs/{logId} {
      allow read, create, update, delete: if isSignedIn() && isOwner(request.resource.data.userId);
    }
    
    // Machinery Collection: Users can manage their own machinery.
    match /machinery/{machineId} {
      allow read, create, update, delete: if isSignedIn() && isOwner(request.resource.data.userId);

      // Maintenance Subcollection: Users can only manage maintenance for their own machinery.
      match /maintenances/{maintenanceId} {
        allow read, create, update, delete: if isSignedIn() && isOwner(request.resource.data.userId);
      }
    }
    
    // Listings (Marketplace) Collection: All users can read listings. Users can only manage their own listings.
    match /listings/{listingId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isSignedIn() && isOwner(request.resource.data.userId);
    }
    
    // Forum Topics Collection
    match /forumTopics/{topicId} {
        allow read, create: if isSignedIn();
        allow update: if isSignedIn() && (isOwner(resource.data.authorId) || request.resource.data.diff(resource.data).affectedKeys().hasOnly(['lastReplyAt', 'replyCount']));
        allow delete: if isSignedIn() && isOwner(resource.data.authorId);

        // Replies Subcollection
        match /replies/{replyId} {
            allow read, create: if isSignedIn();
            allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
        }
    }
    
    // Chats Collection: Users can only read/write messages in chats they are a part of.
    match /chats/{chatId} {
        allow read, write: if isSignedIn() && request.auth.uid in chatId.split('_');

        match /messages/{messageId} {
            allow read, create: if isSignedIn() && request.auth.uid in chatId.split('_');
            allow update, delete: if isSignedIn() && isOwner(resource.data.senderId);
        }
    }
    
  }
}
