
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Regras para a coleção de usuários
    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Regras para a coleção de posts
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.authorId;
      allow update: if request.auth.uid == resource.data.authorId;
      allow delete: if request.auth.uid == resource.data.authorId;

      // Regras para a subcoleção de comentários
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.authorId;
        allow delete, update: if request.auth.uid == resource.data.authorId;
      }
    }
    
    // Regras para a coleção de eventos
    match /events/{eventId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Regras para a coleção de chats
    match /chats/{chatId} {
        allow read, write: if request.auth.uid in chatId.split('_');

        match /messages/{messageId} {
            allow read, write: if request.auth.uid in resource.data.chatId.split('_') || request.auth.uid in chatId.split('_');
        }
    }

    // Regras para a coleção de Tópicos do Fórum
    match /forumTopics/{topicId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.authorId;
        allow update: if request.auth.uid == resource.data.authorId;
        allow delete: if request.auth.uid == resource.data.authorId;

        // Regras para respostas
        match /replies/{replyId} {
            allow read: if request.auth != null;
            allow create: if request.auth.uid == request.resource.data.authorId;
            allow delete, update: if request.auth.uid == resource.data.authorId;
        }
    }

    // Regras para Talhões (Farm Plots)
    match /farmPlots/{plotId} {
        allow read, create, update, delete: if request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId;
    }

    // Regras para Safras (Harvests)
    match /harvests/{harvestId} {
        allow read, create, update, delete: if request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId;
        
        // Subcoleção de talhões da safra
        match /harvestPlots/{plotId} {
             allow read, create, update, delete: if request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId;
             
             // Subcoleção de operações do talhão na safra
             match /operations/{operationId} {
                 allow read, create, update, delete: if request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId;
             }
        }
    }
    
    // Regras para Insumos (Items)
    match /items/{itemId} {
       allow read, create, update, delete: if request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId;
    }

    // Regras para Logs de Inventário (Inventory Logs)
    match /inventoryLogs/{logId} {
       allow read, create: if request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId;
    }
    
    // Regras para Maquinário (Machinery)
    match /machinery/{machineId} {
       allow read, create, update, delete: if request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId;
       
       // Subcoleção de manutenções
       match /maintenances/{maintId} {
            allow read, create, update, delete: if request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId;
       }
    }

    // Regras para Lotes de Gado (Livestock Lots)
    match /livestockLots/{lotId} {
       allow read, create, update, delete: if request.auth.uid == resource.data.userId || request.auth.uid == request.resource.data.userId;

       // Regras para animais dentro de um lote
       match /animals/{animalId} {
          allow create: if request.auth.uid == get(/databases/$(database)/documents/livestockLots/$(lotId)).data.userId;
          allow read, update, delete: if request.auth.uid == resource.data.userId;
       }
       
       // Regras para o histórico de movimentação do lote
       match /movementHistory/{moveId} {
         allow read, write: if request.auth.uid == get(/databases/$(database)/documents/livestockLots/$(lotId)).data.userId;
       }
    }

    // Regras para Anúncios do Marketplace
    match /listings/{listingId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update, delete: if request.auth.uid == resource.data.userId;
    }
  }
}
