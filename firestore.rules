rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Regras para a coleção 'posts'
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }

    // Regras para a coleção 'farmPlots'
    match /farmPlots/{plotId} {
      // Permite ler (um doc), atualizar e excluir se o usuário for o dono do documento.
      allow get, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Permite listar (query) e criar se o userId do novo documento ou da consulta for o mesmo do usuário logado.
      allow list, create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Regras para a coleção 'inventoryItems'
    match /inventoryItems/{itemId} {
       // Permite ler (um doc), atualizar e excluir se o usuário for o dono do documento.
      allow get, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Permite listar (query) e criar se o userId do novo documento ou da consulta for o mesmo do usuário logado.
      allow list, create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

     // Regras para a coleção 'items' (Catálogo)
    match /items/{itemId} {
       // Permite ler (um doc), atualizar e excluir se o usuário for o dono do documento.
      allow get, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Permite listar (query) e criar se o userId do novo documento ou da consulta for o mesmo do usuário logado.
      allow list, create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
