
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(resourceId) {
      return request.auth.uid == resourceId;
    }
    
    function isOwnerOfDoc(docName) {
      return request.auth.uid == get(/databases/$(database)/documents/$(docName)).data.userId;
    }

    match /users/{userId} {
      allow read, write: if isUserAuthenticated() && isOwner(userId);
    }
    
    match /posts/{postId} {
        allow read: if isUserAuthenticated();
        allow create: if isUserAuthenticated() && isOwner(request.resource.data.authorId);
        allow update, delete: if isUserAuthenticated() && isOwnerOfDoc('posts/' + postId);
        
        match /comments/{commentId} {
            allow read: if isUserAuthenticated();
            allow create: if isUserAuthenticated() && isOwner(request.resource.data.authorId);
            allow update, delete: if isUserAuthenticated() && isOwnerOfDoc('posts/' + postId + '/comments/' + commentId);
        }
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if isUserAuthenticated() && (request.auth.uid in chatId.split('_'));
    }

    match /events/{eventId} {
        allow read: if isUserAuthenticated();
        allow create: if isUserAuthenticated() && isOwner(request.resource.data.userId);
        allow delete: if isUserAuthenticated() && isOwnerOfDoc('events/' + eventId);
    }

    match /farmPlots/{plotId} {
        allow read, create, delete: if isUserAuthenticated() && isOwner(request.auth.uid);
    }

    match /harvests/{harvestId} {
        allow read, create, delete: if isUserAuthenticated() && isOwner(request.resource.data.userId);
        allow update: if isUserAuthenticated() && isOwnerOfDoc('harvests/' + harvestId);

        match /harvestPlots/{harvestPlotId} {
           allow read, create, delete: if isUserAuthenticated() && isOwner(request.resource.data.userId);
           allow update: if isUserAuthenticated() && isOwnerOfDoc('harvests/' + harvestId + '/harvestPlots/' + harvestPlotId);

            match /operations/{operationId} {
                allow read, create, update, delete: if isUserAuthenticated() && isOwner(request.resource.data.userId);
            }
        }
    }
    
     match /items/{itemId} {
        allow read, create, update, delete: if isUserAuthenticated() && isOwner(request.resource.data.userId);
    }

    match /inventoryLogs/{logId} {
       allow read, create: if isUserAuthenticated() && isOwner(request.resource.data.userId);
    }
    
    match /machinery/{machineId} {
        allow read, create, update, delete: if isUserAuthenticated() && isOwner(request.resource.data.userId);
        
        match /maintenances/{maintenanceId} {
           allow read, create, update, delete: if isUserAuthenticated() && isOwner(request.resource.data.userId);
        }
    }
    
    match /listings/{listingId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isUserAuthenticated() && isOwnerOfDoc('listings/' + listingId);
    }

    match /livestockLots/{lotId} {
      allow read, create, update, delete: if isUserAuthenticated() && isOwner(request.resource.data.userId);
      
      match /animals/{animalId} {
        allow read, create, update, delete: if isUserAuthenticated() && isOwner(request.resource.data.userId);
      }
    }
    
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
