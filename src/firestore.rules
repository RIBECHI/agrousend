rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users collection:
    // - Authenticated users can read any profile.
    // - Users can only create/update their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId);
    }
    
    // Posts collection:
    // - Authenticated users can read all posts.
    // - Users can only create their own posts.
    // - Users can only update/delete their own posts.
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if isOwner(request.resource.data.authorId);
      allow update, delete: if isOwner(resource.data.authorId);
      
      // Comments subcollection:
      // - Authenticated users can read all comments.
      // - Users can create comments on any post.
      // - Users can only delete their own comments.
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if isOwner(request.resource.data.authorId);
        allow delete: if isOwner(resource.data.authorId);
      }
    }
    
    // Events collection
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create: if isOwner(request.resource.data.userId);
      allow delete: if isOwner(resource.data.userId);
    }

    // Farm Plots collection
    match /farmPlots/{plotId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // Harvests collection
    match /harvests/{harvestId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);

      // HarvestPlots subcollection
      match /harvestPlots/{harvestPlotId} {
        allow read, write: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);

        // Operations subcollection
        match /operations/{operationId} {
            allow read, write: if request.auth != null && request.auth.uid == get(/databases/$(database)/documents/harvests/$(harvestId)).data.userId;
        }
      }
    }

    // Items collection (for inventory)
    match /items/{itemId} {
       allow read: if request.auth != null;
       allow create: if isOwner(request.resource.data.userId);
       allow update, delete: if isOwner(resource.data.userId);
    }
    
    // Inventory Logs collection
    match /inventoryLogs/{logId} {
        allow read, create: if isOwner(request.resource.data.userId);
    }

    // Machinery collection
    match /machinery/{machineId} {
        allow read, write: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);

        // Maintenance subcollection
        match /maintenances/{maintId} {
            allow read, write: if request.auth != null && request.auth.uid == get(/databases/$(database)/documents/machinery/$(machineId)).data.userId;
        }
    }
    
    // Listings collection for Marketplace
    match /listings/{listingId} {
        allow read: if request.auth != null;
        allow create: if isOwner(request.resource.data.userId);
        allow update: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId);
        allow delete: if isOwner(resource.data.userId);
    }
    
    // LivestockLots collection
    match /livestockLots/{lotId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);

      // Animals subcollection
      match /animals/{animalId} {
        allow read: if request.auth != null && request.auth.uid == get(/databases/$(database)/documents/livestockLots/$(lotId)).data.userId;
        allow create: if isOwner(request.resource.data.userId);
        allow update, delete: if isOwner(resource.data.userId);
      }
      
      // Movement History subcollection
      match /movementHistory/{moveId} {
        allow read, write: if request.auth != null && request.auth.uid == get(/databases/$(database)/documents/livestockLots/$(lotId)).data.userId;
        allow create: if isOwner(request.resource.data.userId);
      }
    }

  }
}
